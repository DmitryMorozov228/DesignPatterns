# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  - master
  - develop
  - release/*

pr:
  - master
  - develop
  - release/*

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  version: '1.0.1'

steps:
# - task: NuGetToolInstaller@1

# - task: NuGetCommand@2
#   inputs:
#     restoreSolution: '$(solution)'

# - task: VSBuild@1
#   inputs:
#     solution: '$(solution)'
#     msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

- task: PowerShell@2
  name: getSourceVersion
  inputs:
    targetType: 'inline'
    script: |
      # Get package version.
      echo "##vso[task.setvariable variable=version;isOutput=true]this is the value"
      # $version = (Get-Content -Raw -Path AssemblyVersion.json | ConvertFrom-Json).version
  # env:
  #   BUILD_VERSION: $(version)

- task: PowerShell@2
  name: getSourceVersion2
  inputs:
    targetType: 'inline'
    script: |
      # Get package version.
      Write-Host $(getSourceVersion.version)
  # env:
  #   BUILD_VERSION: $(version)

- task: NuGetCommand@2
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    versioningScheme: 'byEnvVar'
    versionEnvVar: $(getSourceVersion.version)

# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     ArtifactName: 'DesignPatterns'
#     publishLocation: 'Container'
